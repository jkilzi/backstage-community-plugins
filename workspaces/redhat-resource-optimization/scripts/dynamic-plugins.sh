#!/usr/bin/env bash

set -eu

script_name="${BASH_SOURCE:-$0}"
script_path=$(realpath "$script_name")
script_dir_path=$(dirname "$script_path")
workspace_dir=$(dirname "$script_dir_path")
dynamic_plugins_root_dir="$workspace_dir/dynamic-plugins-root"

REGISTRY_URL="${REGISTRY_URL:-quay.io}"
ORG_ID="${ORG_ID:-redhat-resource-optimization}"
REPO="${REPO:-dynamic-plugins}"
VERSION="${VERSION:-}"

function _usage {
  cat <<EOF
Usage: 
  $script_name clean
  VERSION=<semver> $script_name export

Environment variables:
  VERSION    Required. The new plugin version. This values is reflected in every package.json and other manifest files.

Sub-commands:
  clean      Removes directories generated by this script.
  export     Generates the dynamic plugins in $dynamic_plugins_root_dir/artifacts.
EOF
}

function _pocker {
  $(command -v podman || command -v docker) "$@"
}

function _januscli_dynamic_plugins {
  local args=( )
  if command -v docker; then
    args+=( --container-tool docker )
  fi
  yarn janus-cli package package-dynamic-plugins "${args[@]}" "$@"
}

function clean {
  rm -rf "$dynamic_plugins_root_dir"
  rm -rf "$workspace_dir/dist-types"
  rm -rf "$workspace_dir"/plugins/*/dist-dynamic
  rm -rf "$workspace_dir"/plugins/*/dist
  rm -rf "$workspace_dir"/packages/*/dist
}

function _update_version {
  for dir in $(ls -1d plugins/* | tail -n +2); do
    cd "$(realpath $dir)"
    yarn version $VERSION --immediate
    cd -
  done
}

function export {
  _update_version
  yarn tsc
  yarn build:all
  _januscli_dynamic_plugins --export-to "$dynamic_plugins_root_dir"
  git restore plugins/*/package.json
  
  cd $dynamic_plugins_root_dir/backstage-community-plugin-redhat-resource-optimization
  touch yarn.lock
  yarn pack --out $dynamic_plugins_root_dir/artifacts/redhat-resource-optimization.tgz
  
  cd $dynamic_plugins_root_dir/backstage-community-plugin-redhat-resource-optimization-backend
  jq -r '.files += ["embedded"]' package.json > tmp.json && mv tmp.json package.json
  touch yarn.lock
  yarn pack --out $dynamic_plugins_root_dir/artifacts/redhat-resource-optimization-backend.tgz

  cat <<EOF > $dynamic_plugins_root_dir/artifacts/checksums.txt
redhat-resource-optimization.tgz sha512-$(openssl dgst -sha512 -binary < $dynamic_plugins_root_dir/artifacts/redhat-resource-optimization.tgz | base64)
redhat-resource-optimization-backend.tgz sha512-$(openssl dgst -sha512 -binary < $dynamic_plugins_root_dir/artifacts/redhat-resource-optimization-backend.tgz | base64)
EOF

  cd "$workspace_dir"
}

if [[ $# -eq 0 || $1 =~ -h|--help ]]; then
  _usage
else
  command="$1"
  if [[ ! "$command" =~ ^_ ]]; then
    if [[ -z "$VERSION" ]]; then
    echo "Error: The VERSION environment variable must be provided" 
    exit 1
  fi

  if [[ ! ($VERSION =~ ^[0-9]\.[0-9]\.[0-9]) ]]; then
    echo "Error: The VERSION environment variable value doesn't match: /^[0-9]\.[0-9]\.[0-9]/" 
    exit 2
  fi
  
  "$command"
  else
    _usage
  fi
fi
